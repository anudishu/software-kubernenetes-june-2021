Master
- 52.146.89.226 WHITE SCREEN
azureuser

Worker 
- 52.146.91.218 BLACK SCREEN
azureusers
===========================================
LB
================================
Network
	Services
Application
	ingress	
		Ingress COntroller - A Software of APP LB
		ingress - Sets of rules

			devopsschool.com	- default serv
			PATH
				devopsschool.com/red --> RED service
				devopsschool.com/blue --> Blue service
			NAME
				www.devopsschool.com	- default serv
				red.devopsschool.com  --> RED serv
				blue.devopsschool.com  --> RED serv
			TLS

https://www.devopsschool.com/blog/kubernetes-ingress-tutorials-with-examples-and-lab-using-nodeport/

INGRESSNODEPORTIP=$(kubectl get ingresses ingress-single -o jsonpath='{ .status.loadBalancer.ingress[].ip }')
NODEPORT=$(kubectl get svc -n ingress-nginx ingress-nginx-controller -o jsonpath='{ .spec.ports[?(@.name=="http")].nodePort }')
echo $INGRESSNODEPORTIP:$NODEPORT
curl http://$INGRESSNODEPORTIP:$NODEPORT

kubectl create deployment hello-world-service-blue --image=gcr.io/google-samples/hello-app:1.0
kubectl create deployment hello-world-service-red  --image=gcr.io/google-samples/hello-app:1.0

kubectl expose deployment hello-world-service-blue --port=4343 --target-port=8080 --type=ClusterIP
kubectl expose deployment hello-world-service-red  --port=4242 --target-port=8080 --type=ClusterIP

curl http://$INGRESSNODEPORTIP:$NODEPORT/red  --header 'Host: path.example.com'
curl http://$INGRESSNODEPORTIP:$NODEPORT/blue --header 'Host: path.example.com'
============================================================================================
Storage
============================================
Q - How to have data pers in POD?
======================================
Volume(S)
	ATTACH TO POD
		MOUNT to the CONTAINERS
========================================
Volume would come from where?
- STORAGE TECH
	BLOCK 			e.g HOST DISK - EBS - Azure Disk
	Object 			e.g s3 - Azure Blob
	NETWORK STORAGE		e.g nfs - efs - Azure file 
	
===================================================================
Q1 - How to make these Storage Available for K8s Clustor?
- STATIC - Manual Way - Storage is available in ADVANCE before using
		Manual -> PV(PersistentVolume)

- DYNAMIC - Automated Way - Storage is created when request are made
		StorageClass -> PV(PersistentVolume)


Q2 - How to attach to POD
		Claim - PVC(PersistentVolumeClaim)

		Use inside a container
========================================================
Static
	PV 			-> PVC 
		- HOSTPATH

https://www.devopsschool.com/blog/persistentvolume-persistentvolumeclaim-volumes-using-hostpath/
https://www.devopsschool.com/blog/kubernetes-persistentvolume-and-persistentvolumeclaim-using-nfs-volume-types/

https://www.devopsschool.com/blog/setup-nfs-server-and-use-inside-a-kubernetes-pods-in-rhel-centos7/

===================================================================================================
===================================================================================================
Security@Kubernetes
	Authentication
		How to login k8s?
			X509 Client Certs	WORKSTATIOn - > API Server	[FOCUS]
			Bootstrap Tokens	Joining Worker
			OpenID Connect Tokens
			Webhook Token Authentication


	How X509 Client Certs works?
	
			
	Authorization
			Node
			ABAC 
			RBAC			[FOCUS]
			Webhook 			

How RBAC works?
==============================================
Role Based Access controle


VERB
get, list, create, update, patch, watch, delete, and deletecollection

Role
	- Role			is APPLICABLE FOR Namesapce ACCESS
	- Clustor Role		is APPLICABLE Clustor
User
	- WE
	- Service Account

Group 
	Collection of WE and Service Account

List of APIs?
- Role			---- RoleBinding ------ USER or Group
- ClusterRole		---- ClusterRoleBinding ------ USER or Group
- ServiceAccount
- WE - Can be added using CERT - CA Process

Security@AWS
	Authentication
			IAM
	Authorization
			GBAC
Security@Azure
	Authentication
			Active Directory
	Authorization
			RBAC

======================================================================================

Step 1 - Create a user
==============================================================
kubectl create namespace office

openssl genrsa -out employee.key 2048

openssl req -new -key employee.key -out employee.csr -subj "/CN=employee/O=bitnami"

======ADMIN AT MASTER using root==================
openssl x509 -req -in employee.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -out /home/ec2-user/tecnotree/employee.crt -days 500

======USER At LAPTOP==================
kubectl config set-credentials employee --client-certificate=/home/ec2-user/tecnotree/employee.crt  --client-key=/home/ec2-user/tecnotree/employee.key

kubectl config set-context employee-context --cluster=kubernetes --namespace=office --user=employee

kubectl --context=employee-context get pods

Step 2 - Create a Service Account
=============================================================================

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: devopsschool


Step 3 - Create a Role

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: office
  name: role-office
rules:
- apiGroups: ["", "extensions", "apps"]
  resources: ["deployments", "replicasets", "pods"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"] # You can also use ["*"]

Step 4 - Create a Clustor Role

Step 5 - Add User to Role

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: office-role-binding
  namespace: office
subjects:
- kind: User
  name: employee
  apiGroup: ""
roleRef:
  kind: Role
  name: role-office
  apiGroup: ""

Step 6 - Add User to ClustorRole


============================
$ kubectl --context=employee-context run nginx --image=nginx
$ kubectl --context=employee-context get pods






